type User @entity {
  id: ID!
  marketingReferrer: User
  marketingReferrals: [User!]! @derivedFrom(field: "marketingReferrer")
  depth: Int!
  directReferralsCount: Int!
  packs: [Pack!]! @derivedFrom(field: "user")
  events: [Event!]! @derivedFrom(field: "user")
}

type Pack @entity @index(fields: ["user", "level"], unique: true) {
  id: ID!
  user: User!
  level: Int!
  expiresAt: DateTime!
}

union EventLog = MarketingReferrerChanged | TimestampEndPack | RevenueMFS | RevenueStable | LostMoney

type MarketingReferrerChanged {
  accountId: User!
}

type TimestampEndPack {
  level: Int!
  timestamp: DateTime!
}

type RevenueMFS {
  from: String!
  amount: BigInt!
}

type RevenueStable {
  from: String!
  amount: BigInt!
}

type LostMoney {
  from: String!
  amount: BigInt!
}

type Event @entity {
  id: ID!
  user: User!
  eventLog: EventLog
  createdAt: DateTime! @index
  txHash: String! @index
}
